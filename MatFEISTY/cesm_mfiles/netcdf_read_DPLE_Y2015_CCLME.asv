% FEISTY output at all locations

clear all
close all

clear all
close all

%cfile = 'Dc_Lam700_enc70-b200_m400-b175-k086_c20-b250_D075_A050_nmort1_BE08_noCC_RE00100';
cfile = 'Dc_Lam700_enc70-b200_m400-b175-k086_c20-b250_D075_A050_sMZ090_mMZ045_nmort1_BE08_CC80_RE00100';

fpath=['/Volumes/MIP/NC/CESM_MAPP/' cfile '/'];

%pick year
StartYr = 2015;
%loop over members
submem = 1:40;
for mem=1:length(submem) %will loop over
    Member = submem(mem);
    harv = ['v14_Y' num2str(StartYr) '_M' num2str(Member) '_All_fish03_' ];
    
    %% SP
    ncid = netcdf.open([fpath 'DPLE_' harv 'sml_p.nc'],'NC_NOWRITE');
    [ndims,nvars,ngatts,unlimdimid] = netcdf.inq(ncid);
    for i = 1:nvars
        varname = netcdf.inqVar(ncid, i-1);
        eval([ varname ' = netcdf.getVar(ncid,i-1);']);
        eval([ varname '(' varname ' == 99999) = NaN;']);
    end
    netcdf.close(ncid);
    
    %%
    [ni,nt] = size(biomass);
    
    SP.bio = biomass;
    SP.prod = prod;
    clear biomass prod
    
    %% SF
    ncid = netcdf.open([fpath 'DPLE_' harv 'sml_f.nc'],'NC_NOWRITE');
    [ndims,nvars,ngatts,unlimdimid] = netcdf.inq(ncid);
    for i = 1:nvars
        varname = netcdf.inqVar(ncid, i-1);
        eval([ varname ' = netcdf.getVar(ncid,i-1);']);
        eval([ varname '(' varname ' == 99999) = NaN;']);
    end
    netcdf.close(ncid);
    
    SF.bio = biomass(:,1:nt);
    SF.prod = prod;
    clear biomass prod
    
    % SD
    ncid = netcdf.open([fpath 'DPLE_' harv 'sml_d.nc'],'NC_NOWRITE');
    [ndims,nvars,ngatts,unlimdimid] = netcdf.inq(ncid);
    for i = 1:nvars
        varname = netcdf.inqVar(ncid, i-1);
        eval([ varname ' = netcdf.getVar(ncid,i-1);']);
        eval([ varname '(' varname ' == 99999) = NaN;']);
    end
    netcdf.close(ncid);
    
    SD.bio = biomass;
    SD.prod = prod;
    clear biomass prod
    
    % MP
    ncid = netcdf.open([fpath 'DPLE_' harv 'med_p.nc'],'NC_NOWRITE');
    [ndims,nvars,ngatts,unlimdimid] = netcdf.inq(ncid);
    for i = 1:nvars
        varname = netcdf.inqVar(ncid, i-1);
        eval([ varname ' = netcdf.getVar(ncid,i-1);']);
        eval([ varname '(' varname ' == 99999) = NaN;']);
    end
    netcdf.close(ncid);
    
    MP.bio = biomass;
    MP.prod = prod;
    MP.yield = yield;
    clear yield biomass prod
    
    % MF
    ncid = netcdf.open([fpath 'DPLE_' harv 'med_f.nc'],'NC_NOWRITE');
    [ndims,nvars,ngatts,unlimdimid] = netcdf.inq(ncid);
    for i = 1:nvars
        varname = netcdf.inqVar(ncid, i-1);
        eval([ varname ' = netcdf.getVar(ncid,i-1);']);
        eval([ varname '(' varname ' == 99999) = NaN;']);
    end
    netcdf.close(ncid);
    
    MF.bio = biomass;
    MF.prod = prod;
    MF.yield = yield;
    clear yield biomass prod
    
    % MD
    ncid = netcdf.open([fpath 'DPLE_' harv 'med_d.nc'],'NC_NOWRITE');
    [ndims,nvars,ngatts,unlimdimid] = netcdf.inq(ncid);
    for i = 1:nvars
        varname = netcdf.inqVar(ncid, i-1);
        eval([ varname ' = netcdf.getVar(ncid,i-1);']);
        eval([ varname '(' varname ' == 99999) = NaN;']);
    end
    netcdf.close(ncid);
    
    MD.bio = biomass;
    MD.prod = prod;
    MD.yield = yield;
    clear yield biomass prod
    
    % LP
    ncid = netcdf.open([fpath 'DPLE_' harv 'lrg_p.nc'],'NC_NOWRITE');
    [ndims,nvars,ngatts,unlimdimid] = netcdf.inq(ncid);
    for i = 1:nvars
        varname = netcdf.inqVar(ncid, i-1);
        eval([ varname ' = netcdf.getVar(ncid,i-1);']);
        eval([ varname '(' varname ' == 99999) = NaN;']);
    end
    netcdf.close(ncid);
    
    LP.bio = biomass;
    LP.prod = prod;
    LP.yield = yield;
    clear yield biomass prod
    
    % LD
    ncid = netcdf.open([fpath 'DPLE_' harv 'lrg_d.nc'],'NC_NOWRITE');
    [ndims,nvars,ngatts,unlimdimid] = netcdf.inq(ncid);
    for i = 1:nvars
        varname = netcdf.inqVar(ncid, i-1);
        eval([ varname ' = netcdf.getVar(ncid,i-1);']);
        eval([ varname '(' varname ' == 99999) = NaN;']);
    end
    netcdf.close(ncid);
    
    LD.bio = biomass;
    LD.prod = prod;
    LD.yield = yield;
    clear yield biomass prod
    
    % Benthic material
    ncid = netcdf.open([fpath 'DPLE_' harv 'bent.nc'],'NC_NOWRITE');
    [ndims,nvars,ngatts,unlimdimid] = netcdf.inq(ncid);
    for i = 1:nvars
        varname = netcdf.inqVar(ncid, i-1);
        eval([ varname ' = netcdf.getVar(ncid,i-1);']);
        eval([ varname '(' varname ' == 99999) = NaN;']);
    end
    netcdf.close(ncid);
    
    Bent.bio = biomass;
    clear biomass
    
   
    %% Space
    %exclude weird jump at yr 43 (mo=517)
    % tid = 1:516;
    % sp_sbio = nanmean(SP.bio(:,tid),2);
    % sf_sbio = nanmean(SF.bio(:,tid),2);
    % sd_sbio = nanmean(SD.bio(:,tid),2);
    % mp_sbio = nanmean(MP.bio(:,tid),2);
    % mf_sbio = nanmean(MF.bio(:,tid),2);
    % md_sbio = nanmean(MD.bio(:,tid),2);
    % lp_sbio = nanmean(LP.bio(:,tid),2);
    % ld_sbio = nanmean(LD.bio(:,tid),2);
    % b_sbio  = nanmean(Bent.bio(:,tid),2);
    % mz_smfrac= nanmean(MZ.frac(:,tid),2);
    
    sp_sbio = nanmean(SP.bio,2);
    sf_sbio = nanmean(SF.bio,2);
    sd_sbio = nanmean(SD.bio,2);
    mp_sbio = nanmean(MP.bio,2);
    mf_sbio = nanmean(MF.bio,2);
    md_sbio = nanmean(MD.bio,2);
    lp_sbio = nanmean(LP.bio,2);
    ld_sbio = nanmean(LD.bio,2);
    b_sbio  = nanmean(Bent.bio,2);
    mz_smfrac= nanmean(MZ.frac,2);
    
    sp_sprod = nanmean(SP.prod,2);
    sf_sprod = nanmean(SF.prod,2);
    sd_sprod = nanmean(SD.prod,2);
    mp_sprod = nanmean(MP.prod,2);
    mf_sprod = nanmean(MF.prod,2);
    md_sprod = nanmean(MD.prod,2);
    lp_sprod = nanmean(LP.prod,2);
    ld_sprod = nanmean(LD.prod,2);
    
    %mean yield per mo
    mf_smy=nanmean(MF.yield,2);
    mp_smy=nanmean(MP.yield,2);
    md_smy=nanmean(MD.yield,2);
    lp_smy=nanmean(LP.yield,2);
    ld_smy=nanmean(LD.yield,2);
    %mean catch per mo
    mf_smc=nanmean(MF.catch,2);
    mp_smc=nanmean(MP.catch,2);
    md_smc=nanmean(MD.catch,2);
    lp_smc=nanmean(LP.catch,2);
    ld_smc=nanmean(LD.catch,2);
    
    %total yield per mo
    mf_sty=nansum(MF.yield,2);
    mp_sty=nansum(MP.yield,2);
    md_sty=nansum(MD.yield,2);
    lp_sty=nansum(LP.yield,2);
    ld_sty=nansum(LD.yield,2);
    %total catch per mo
    mf_stc=nansum(MF.catch,2);
    mp_stc=nansum(MP.catch,2);
    md_stc=nansum(MD.catch,2);
    lp_stc=nansum(LP.catch,2);
    ld_stc=nansum(LD.catch,2);
    
    %% Total times overcon happens
    MZ.over = nan*ones(size(MZ.frac));
    MZ.over(MZ.frac > 1) = ones;
    MZ.over(MZ.frac <= 1) = zeros;
    % Time
    mz_ttf=nansum(MZ.over,1);
    % Space
    mz_stf=nansum(MZ.over,2);
    
    %% Annual means
    nyr = nt/12;
    st=1:12:length(time);
    en=12:12:length(time);
    mz_mtf = nan*ones(ni,nyr);
    mf_tac = nan*ones(ni,nyr);
    mp_tac = nan*ones(ni,nyr);
    md_tac = nan*ones(ni,nyr);
    lp_tac = nan*ones(ni,nyr);
    ld_tac = nan*ones(ni,nyr);
    
    for n=1:length(st)
        % total overcon
        mz_mtf(:,n)=nansum(MZ.over(:,st(n):en(n)),2);
        
        % mean biomass
        sp_abio(:,n)=nanmean(SP.bio(:,st(n):en(n)),2);
        sf_abio(:,n)=nanmean(SF.bio(:,st(n):en(n)),2);
        sd_abio(:,n)=nanmean(SD.bio(:,st(n):en(n)),2);
        mp_abio(:,n)=nanmean(MP.bio(:,st(n):en(n)),2);
        mf_abio(:,n)=nanmean(MF.bio(:,st(n):en(n)),2);
        md_abio(:,n)=nanmean(MD.bio(:,st(n):en(n)),2);
        lp_abio(:,n)=nanmean(LP.bio(:,st(n):en(n)),2);
        ld_abio(:,n)=nanmean(LD.bio(:,st(n):en(n)),2);
        b_abio(:,n)=nanmean(Bent.bio(:,st(n):en(n)),2);
        
        % mean prod
        sp_aprod(:,n)=nanmean(SP.prod(:,st(n):en(n)),2);
        sf_aprod(:,n)=nanmean(SF.prod(:,st(n):en(n)),2);
        sd_aprod(:,n)=nanmean(SD.prod(:,st(n):en(n)),2);
        mp_aprod(:,n)=nanmean(MP.prod(:,st(n):en(n)),2);
        mf_aprod(:,n)=nanmean(MF.prod(:,st(n):en(n)),2);
        md_aprod(:,n)=nanmean(MD.prod(:,st(n):en(n)),2);
        lp_aprod(:,n)=nanmean(LP.prod(:,st(n):en(n)),2);
        ld_aprod(:,n)=nanmean(LD.prod(:,st(n):en(n)),2);
        
        % catch
        mp_tac(:,n)=nansum(MP.catch(:,st(n):en(n)),2);
        mf_tac(:,n)=nansum(MF.catch(:,st(n):en(n)),2);
        md_tac(:,n)=nansum(MD.catch(:,st(n):en(n)),2);
        lp_tac(:,n)=nansum(LP.catch(:,st(n):en(n)),2);
        ld_tac(:,n)=nansum(LD.catch(:,st(n):en(n)),2);
        
    end
    
    tmn = mf_tac + mp_tac + md_tac + lp_tac + ld_tac;
    stmn = sum(tmn);
    
    mp_tsac = nansum(mp_tac);
    mf_tsac = nansum(mf_tac);
    md_tsac = nansum(md_tac);
    lp_tsac = nansum(lp_tac);
    ld_tsac = nansum(ld_tac);
    
    %%
    fpath=['/Volumes/MIP/NC/CESM_MAPP/' cfile '/'];
    save([fpath 'Time_Means_DPLE_' harv cfile '.mat'],'time',...
        
%% Fish-MIP OUTPUTS =================================================
t=time;
mo=t/12;
mo=mo+1850;
yr20=find(mo>2000);

allF = SF.bio(:,yr20) + MF.bio(:,yr20);
allP = SP.bio(:,yr20) + MP.bio(:,yr20) + LP.bio(:,yr20);
allD = SD.bio(:,yr20) + MD.bio(:,yr20) + LD.bio(:,yr20);
allB = Bent.bio(:,yr20);

save([fpath 'CESM_Hist_2000_2006_empHP_fishMIP_outputs_monthly_' cfile '.mat'],'time','mo',...
    'allF','allD','allP','allB','yr20');

end



